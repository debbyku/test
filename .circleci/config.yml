# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:

    #working_directory: /home/circleci
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:2023.12

    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      #- attach_workspace: {at: /home/circleci}
      - setup_remote_docker
      - run: |
          docker-compose up -d
          docker exec $(docker-compose ps -q copo_web) bash -c 'ps -aef'
          docker exec $(docker-compose ps -q copo_web) bash -c 'python manage.py makemigrations && python manage.py makemigrations allauth && python manage.py migrate && python manage.py setup_sequencing_centres && curl -v http://127.0.0.1:8000'
      - run:
          name: wait for copo_web
          command: |
              set -xe

              wait_for_readiness() {
                local SERVICE="$1"
                local PORT="$2"
                local TRY_TIMEOUT=300
                local TRY_INTERVAL=1
                local REMAINING_TIME=$TRY_TIMEOUT
                while ! curl http://localhost:${PORT}/ -s -I | head -n1 | grep -q 200;
                do
                  REMAINING_TIME=$((REMAINING_TIME-TRY_INTERVAL))
                  if [ $REMAINING_TIME -lt 0 ];
                  then
                    echo "Error: '${SERVICE}' did not start in expected duration."
                    exit 1
                  fi
                  echo "Waiting for '${SERVICE}' to start... remaning ${REMAINING_TIME} seconds."
                  sleep $TRY_INTERVAL
                done
                echo "The '${SERVICE}' is ready to be tested."
              }
  
              wait_for_readiness  8000
  
      - run: "curl http://127.0.0.1:8000/copo"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build_and_test:
    jobs:
      - build:
          context: "test copo"
